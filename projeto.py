import textwrap
import warnings
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
# import seaborn as sns
# !pip install statsmodels
# from statsmodels.tsa.seasonal import seasonal_decompose
# from statsmodels.tsa.stattools import acf, pacf
import streamlit as st
from prophet.diagnostics import performance_metrics

# Ignorar os FutureWarnings
warnings.simplefilter(action='ignore', category=FutureWarning)

# selected_date = '2024-01-25'  # Replace this with the selected date
# selected_time = pd.Timestamp('00:00:00').time()

# from model import modelo
# from prevel_model import prevendo

import pandas as pd
import numpy as np
from prophet import Prophet
import plotly.graph_objs as go
import plotly.express as px
import streamlit as st
import os
import streamlit as st
import pandas as pd
import requests

data_selecionada = None
hora_selecionada = None


def mean_absolute_percentage_error(y_true, y_pred):
    y_true, y_pred = np.array(y_true), np.array(y_pred)
    mape = np.mean(np.abs((y_true - y_pred) / y_true)) * 100
    return mape


def prevendo(df2, data1, flag=True):
    from prophet import Prophet
    import pandas as pd

    # Criando o modelo Prophet
    feriados_sp = pd.DataFrame({
        'holiday': 'feriados_sp',
        'ds': pd.to_datetime(['2024-01-25', '2024-02-25', '2024-03-25', '2024-04-25', '2024-05-25',
                              '2024-06-25', '2024-07-25', '2024-08-25', '2024-09-25', '2024-10-25',
                              '2024-11-25', '2024-12-25']),
        'lower_window': 0,
        'upper_window': 0,
    })

    m = Prophet(holidays=feriados_sp)

    # Adicionando feriados semanais (s√°bados e domingos)
    df2['ds'] = pd.to_datetime(df2['ds'], format='%d.%m.%Y')
    df2['is_weekend'] = (df2['ds'].dt.weekday >= 5).astype(int)
    m.add_regressor('is_weekend')

    m.fit(df2)  # Ajustando o modelo com o DataFrame original

    # Estendendo o per√≠odo de previs√£o para incluir janeiro de 2024
    future_dates = pd.date_range(start='2024-01-01', periods=31, freq='D')
    future = pd.DataFrame({'ds': future_dates})
    future['is_weekend'] = (future['ds'].dt.weekday >= 5).astype(int)

    # Fazendo a previs√£o com base nas datas futuras
    forecast = m.predict(future)

    # Plotando os resultados para o per√≠odo estendido
    fig_extended = m.plot(forecast)
    if flag:
        st.write(fig_extended)
    flag = False
    # Filtrando os resultados para a data desejada, excluindo feriados e finais de semana
    prediction1 = forecast[(forecast['ds'] == pd.to_datetime(data1)) &
                           (~forecast['ds'].isin(feriados_sp['ds'])) &
                           (~(forecast['ds'].dt.weekday >= 5))]

    if not prediction1.empty:
        yhat_period = prediction1['yhat'].values[0]
        return yhat_period
    else:
        return None


def modelo(df1, data_selecionada1, hora_selecionada1):
    # Adicionando feriados nacionais brasileiros
    feriados_sp = pd.DataFrame({
        'holiday': 'feriados_sp',
        'ds': pd.to_datetime(['2024-01-25', '2024-02-25', '2024-03-25', '2024-04-25', '2024-05-25',
                              '2024-06-25', '2024-07-25', '2024-08-25', '2024-09-25', '2024-10-25',
                              '2024-11-25', '2024-12-25']),
        'lower_window': 0,
        'upper_window': 0,
    })

    # Criando o modelo Prophet
    m = Prophet(holidays=feriados_sp)

    # Converter 'ds' para o formato de data, se necess√°rio
    df1['ds'] = pd.to_datetime(df1['ds'])

    # Adicionando feriados semanais (s√°bados e domingos)
    # Criar campo 'is_weekend' com 0 e 1 - significando fim de semana
    df1['is_weekend'] = (df1['ds'].dt.weekday >= 5).astype(int)
    m.add_regressor('is_weekend')

    m.fit(df1)

    # Criando o dataframe para previs√£o futura
    future = m.make_future_dataframe(periods=365)
    future['is_weekend'] = (future['ds'].dt.weekday >= 5).astype(int)
    forecast = m.predict(future)

    # Convers√£o para arrays para uso em plotagem
    fcst_t = np.array(forecast['ds'].dt.to_pydatetime())
    history_ds = np.array(m.history['ds'].dt.to_pydatetime())

    # Criando o gr√°fico com Plotly
    fig = go.Figure()

    # Adicionando os dados do hist√≥rico
    fig.add_trace(go.Scatter(x=history_ds, y=m.history['y'], mode='markers', name='Hist√≥rico'))

    # Adicionando os dados da previs√£o
    fig.add_trace(go.Scatter(x=fcst_t, y=forecast['yhat'], mode='lines', name='Previs√£o'))

    # Adicionando a faixa de intervalo
    fig.add_trace(go.Scatter(
        x=np.concatenate([fcst_t, fcst_t[::-1]]),
        y=np.concatenate([forecast['yhat_lower'], forecast['yhat_upper'][::-1]]),
        fill='toself',
        fillcolor='rgba(255, 0, 0, 0.2)',
        line=dict(color='rgba(255, 255, 255, 0)'),
        name='Intervalo de Confian√ßa'
    ))

    # Personalizando o layout do gr√°fico
    fig.update_layout(
        xaxis_title='Data',
        yaxis_title='Valores',
        title='Previs√£o com Prophet e Intervalo de Confian√ßa'
    )

    # Exibindo o gr√°fico no Streamlit
    st.plotly_chart(fig)

    # Mostrando

    # Calculando m√©tricas de desempenho
    # df_cv = performance_metrics(df)
    # st.write(df_cv)
    # este procedimento est√° dando erro

    from sklearn.metrics import mean_absolute_error, mean_squared_error

    # Verificar se os DataFrames t√™m o mesmo n√∫mero de amostras
    # df e forecast s√£o diferentes pois forecast foi levado em conta os feridos e fins de semana
    # if df1.shape[0] == forecast.shape[0]:
    # Calcular m√©tricas
    #   mae = mean_absolute_error(df1['y'], forecast['yhat'])
    #  mse = mean_squared_error(df1['y'], forecast['yhat'])
    #  rmse = np.sqrt(mse)

    # sf.write(f"MAE: {mae}")
    # sf.write(f"MSE: {mse}")
    # sf.write(f"RMSE: {rmse}")
    # else:
    #   df.write("Os DataFrames n√£o t√™m o mesmo n√∫mero de amostras. Verifique os dados.")
    # Calculando as previs√µes do modelo para os dados de teste
    # Calculando novamente forecast para todos os dados, vai ser prossivel calcular as m√©tricas
    forecast = m.predict(df1)

    # Calculando o MAE entre as previs√µes e os valores reais
    mae = mean_absolute_error(df1['y'], forecast['yhat'])
    mae_rounded = round(mae, 2)

    st.write(f'MAE: {mae_rounded}')
    mse = mean_squared_error(df1['y'], forecast['yhat'])
    mse_rounded = round(mse, 2)
    rmse = mean_squared_error(df1['y'], forecast['yhat'], squared=False)
    rmse_rounded = round(rmse, 2)
    st.write(f'MSE: {mse_rounded}')
    st.write(f'RMSE: {rmse_rounded}')

    # Supondo que 'forecast' seja o resultado da previs√£o do Prophet
    # y_true √© a s√©rie real do seu DataFrame, voc√™ pode usar df['y'] ou qualquer outra coluna correspondente
    y_true = df1['y']

    # Obtendo os valores previstos a partir do forecast
    y_pred = forecast['yhat']

    # Calculando o MAPE usando a fun√ß√£o importada
    mape = mean_absolute_percentage_error(y_true, y_pred)
    mape = round(mape, 2)
    st.write(f"MAPE: {mape}")

    if data_selecionada1 is not None and hora_selecionada1 is not None:
        # Convert the selected date to the DataFrame's format
        data_formatada_interna = pd.to_datetime(data_selecionada1).strftime('%Y-%m-%d')
        # Create a datetime combining the selected date with the default time
        data_hora_interna = pd.to_datetime(data_formatada_interna + ' ' + str(hora_selecionada1))
        # Filter the DataFrame based on the selected date and time
        df_filtrado_interno = forecast[forecast['ds'] == data_hora_interna]
        st.dataframe(df_filtrado_interno)
    else:
        st.warning("N√£o h√° dados para a data selecionada.")
    return forecast


st.title('üìà Proje√ß√£o do √çndice Bovespa')

# Importando bibliotecas
import streamlit as st

# Estilo para ajustar a largura da √°rea de exibi√ß√£o e justificar o texto
st.markdown(
    """
    <style>
        .reportview-container .main .block-container {
            max-width: 50%;
            justify-content: center;
        }

        .custom-container {
            width: 80%;
            padding: 20px;
            border: 2px solid #333;
            border-radius: 10px;
            margin: 10px 0;
        }
        .custom-container li {
            text-align: justify; /* Alinha o texto √† justifica√ß√£o */  
        }
        .custom-container p {
            text-align: justify; /* Alinha o texto √† justifica√ß√£o */  
        }
        
    </style>
    """,
    unsafe_allow_html=True
)

# Definindo guias
tabs = ["Vis√£o Geral", "Pontos-chave", "Utiliza√ß√£o do Prophet", "Sobre o Autor"]
selected_tab = st.sidebar.radio("Escolha uma guia:", tabs)

# Conte√∫do das guias
tab_contents = {
    "Vis√£o Geral": """
    <div class="custom-container">
       <p> Este data app usa a Biblioteca open-source Prophet para automaticamente gerar valores futuros de previs√£o de um dataset importado. 
        Voc√™ poder√° visualizar as proje√ß√µes do √≠ndice Bovespa para o per√≠odo de 01/01/2024 a 31/01/2024 üòµ.</p>
    </div>
    <style>
        .custom-container p {
            text-align: justify; /* Alinha o texto √† justifica√ß√£o */ 
        }
    </style>
    """,
    "Pontos-chave": """
    <div class="custom-container">
      <p>O Prophet tem sido amplamente utilizado em diversas √°reas, como previs√£o de vendas, demanda de produtos, an√°lise financeira, previs√£o clim√°tica e muito mais, devido √† sua capacidade de gerar previs√µes precisas e √† sua facilidade de uso. 
        √â importante notar que, embora seja uma ferramenta poderosa, a escolha entre modelos depende do contexto espec√≠fico do problema e da natureza dos dados.</p>
    </div>
    <style>
        .custom-container p {
            text-align: justify; /* Alinha o texto √† justifica√ß√£o */
        }
    </style>
    """,
    "Utiliza√ß√£o do Prophet": """
    <div class="custom-container">
        <p>A biblioteca Prophet, desenvolvida pelo Facebook, √© uma ferramenta popular e poderosa para previs√£o de s√©ries temporais. Ela foi projetada para simplificar o processo de cria√ß√£o de modelos de previs√£o, oferecendo aos usu√°rios uma maneira f√°cil de gerar previs√µes precisas e de alta qualidade, mesmo sem um profundo conhecimento em s√©ries temporais ou estat√≠stica avan√ßada.</p>
        <p>Aqui est√£o alguns pontos-chave sobre o Prophet:</p>
        <ol>
            <li><strong>Facilidade de Uso:</strong> O Prophet foi desenvolvido para ser acess√≠vel e f√°cil de usar, permitindo que usu√°rios, mesmo sem experi√™ncia avan√ßada em s√©ries temporais, possam construir modelos de previs√£o.</li>
            <li><strong>Componentes Aditivos:</strong> O modelo do Prophet √© baseado em componentes aditivos, onde s√£o consideradas tend√™ncias anuais, sazonais e efeitos de feriados, al√©m de componentes de regress√£o.</li>
            <li><strong>Tratamento de Dados Ausentes e Outliers:</strong> O Prophet lida bem com dados ausentes e outliers, reduzindo a necessidade de pr√©-processamento extensivo dos dados antes da modelagem.</li>
            <li><strong>Flexibilidade:</strong> Permite a inclus√£o de dados adicionais, como feriados e eventos especiais, para melhorar a precis√£o das previs√µes.</li>
            <li><strong>Estimativa Autom√°tica de Intervalos de Incerteza:</strong> O Prophet fornece intervalos de incerteza para as previs√µes, o que √© essencial para compreender a confiabilidade dos resultados.</li>
            <li><strong>Implementa√ß√£o em Python e R:</strong> Est√° dispon√≠vel tanto para Python quanto para R, ampliando sua acessibilidade para diferentes comunidades de usu√°rios.</li>
            <li><strong>Comunidade Ativa e Documenta√ß√£o Detalhada:</strong> A biblioteca possui uma comunidade ativa de usu√°rios e desenvolvedores, al√©m de uma documenta√ß√£o detalhada e exemplos pr√°ticos que ajudam na aprendizagem e na solu√ß√£o de problemas.</li>
        </ol>
    </div>
    """,
    "Sobre o Autor": """
    <div class="custom-container">
        Criado por Henrique Jos√© Itzcovici.
        C√≥digo dispon√≠vel em: <a href="https://github.com/Henitz/challenge2" target="_blank">GitHub</a>
    </div>
    """
}

# Renderizar conte√∫do da guia selecionada
st.markdown(tab_contents[selected_tab], unsafe_allow_html=True)

"""
### Passo 1: Importar dados
"""
df = pd.DataFrame(columns=['Data'])  # Inicializa um DataFrame vazio

# Adiciona o diret√≥rio que cont√©m app.py ao PATH para importa√ß√µes relativas
# diretorio_app = os.path.dirname(os.path.abspath(__file__))
# sys.path.append(diretorio_app)
# from app import pasta_do_zip  # Importa a vari√°vel pasta_do_zip de app.py


# URL do arquivo CSV no GitHub
csv_url = "https://raw.githubusercontent.com/Henitz/challenge3/main/Dados Hist√≥ricos - Ibovespa (4).csv"

# Baixa o arquivo CSV localmente
local_filename = "Dados Hist√≥ricos - Ibovespa (4).csv"
response = requests.get(csv_url)
with open(local_filename, 'wb') as f:
    f.write(response.content)

# Obt√©m o nome do arquivo para usar como chave de cache
key_for_cache = str(os.path.basename(local_filename)) if os.path.exists(local_filename) else None

# File Uploader
upload_message = (
    "Importe os dados da s√©rie em formato CSV aqui. Posteriormente, as colunas ser√£o nomeadas ds e y. "
    "A entrada de dados para o Prophet sempre deve ser com as colunas: ds e y. "
    "A coluna ds (datestamp) deve ter o formato esperado pelo Pandas, idealmente "
    "YYYY-MM-DD para data ou YYYY-MM-DD HH:MM:SS para timestamp. "
    "A coluna y deve ser num√©rica e representa a medida que queremos estimar."
)
uploaded_file = st.file_uploader(upload_message, type='csv', key=key_for_cache)

# Use o arquivo CSV local
# if uploaded_file is None:
# Use o arquivo CSV do GitHub se nenhum arquivo foi carregado
#   df = pd.read_csv(local_filename)
#  st.dataframe(df)
# else:
# Use o arquivo carregado
#  df = pd.read_csv(uploaded_file)
# st.dataframe(df)


import streamlit as st

upload_message = (
    "Importe os dados da s√©rie em formato CSV aqui. Posteriormente, as colunas ser√£o nomeadas ds e y. "
    "A entrada de dados para o Prophet sempre deve ser com as colunas: ds e y. "
    "A coluna ds (datestamp) deve ter o formato esperado pelo Pandas, idealmente "
    "YYYY-MM-DD para data ou YYYY-MM-DD HH:MM:SS para timestamp. "
    "A coluna y deve ser num√©rica e representa a medida que queremos estimar."
)

# Use str() to convert the cache key to a string


# File Uploader
# uploaded_file = st.file_uploader(upload_message, type='csv', key=key_for_cache)

if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)

    if not df.empty and 'Data' in df.columns and '√öltimo' in df.columns:
        # Renomear colunas para 'ds' e 'y'
        df = df.rename(columns={'Data': 'ds', '√öltimo': 'y'})
        df['ds'] = pd.to_datetime(df['ds'], format='%d.%m.%Y')

        # Outras opera√ß√µes no DataFrame, como remover colunas indesejadas
        colunas_para_remover = ['Abertura', 'M√°xima', 'M√≠nima', 'Vol.', 'Var%']
        df = df.drop(columns=colunas_para_remover)

        st.dataframe(df.style.set_table_attributes('style="height: 50px; overflow: auto;"'))

        if 'ds' in df.columns:
            data_padrao = df['ds'].min()
            hora_padrao = pd.Timestamp('00:00:00').time()  # Hora padr√£o como 00:00:00
            data_minima = df['ds'].min()  # Data m√≠nima do DataFrame
            data_maxima = df['ds'].max()  # Data m√°xima do DataFrame

            data_selecionada = st.sidebar.date_input("Selecione uma data", value=data_padrao, min_value=data_minima,
                                                     max_value=data_maxima)
            hora_selecionada = st.sidebar.time_input("Selecione um hor√°rio", value=hora_padrao)

            if data_selecionada:
                # Convertendo a data selecionada para o formato do DataFrame
                data_selecionada_formatada = pd.to_datetime(data_selecionada).strftime('%Y-%m-%d')

                # Criar um datetime combinando a data selecionada com a hora padr√£o
                data_hora_selecionada = pd.to_datetime(data_selecionada_formatada + ' ' + str(hora_selecionada))

                # Filtrar o DataFrame com base na data e hora selecionadas
                df_filtrado = df[df['ds'] == data_hora_selecionada]
                st.dataframe(df_filtrado)
            else:
                st.warning("N√£o h√° dados para a data selecionada.")
        else:
            st.warning("A coluna 'ds' n√£o est√° presente no DataFrame.")

    else:
        st.warning("O arquivo n√£o foi carregado corretamente ou n√£o possui as colunas esperadas.")

if uploaded_file is not None and not df.empty and 'ds' in df.columns:
    """
    ### Passo 2: Modelo
    """
    modelo(df, data_selecionada, hora_selecionada)
    st.markdown(
        """
        <style>
            .reportview-container .main .block-container {
                max-width: 80%;
                justify-content: center;
            }

            .custom-container {
                border: 2px solid black;
                border-radius: 5px;
                padding: 20px;
                width: 80%;
                text-align: justify;
                margin: 20px 0;
            }

            .nested-container {
                border: 2px solid black;
                border-radius: 5px;
                padding: 10px;
                text-align: justify;
                margin: 10px 0;
            }
        </style>
        """,
        unsafe_allow_html=True
    )
    # Definindo guias
    tabs = ["Conceitos", "MAE", "MAPE", "RMSE", "Acur√°cia"]
    selected_tab = st.sidebar.radio("Escolha uma m√©trica:", tabs)

    # Conte√∫do das guias
    tab_contents = {

        "Conceitos": """
            <div class="nested-container">
            <h6><strong>Conceitos</strong></h6>
            <p><strong>MAE (Mean Absolute Error)</strong>: Representa a m√©dia das diferen√ßas absolutas entre as previs√µes e os valores reais. Indica o qu√£o perto as previs√µes est√£o dos valores reais, sem considerar a dire√ß√£o do erro.</p>
            <p><strong>MSE (Mean Squared Error)</strong>: √â a m√©dia das diferen√ßas quadradas entre as previs√µes e os valores reais. Penaliza erros maiores mais significativamente que o MAE, devido ao termo quadr√°tico, o que torna o MSE mais sens√≠vel a outliers.</p>
            <p><strong>RMSE (Root Mean Squared Error)</strong>: √â a raiz quadrada do MSE. Apresenta o mesmo tipo de informa√ß√£o que o MSE, mas na mesma unidade que os dados originais, o que facilita a interpreta√ß√£o.</p>
            <p><strong>MAPE (Mean Absolute Percentage Error)</strong>: √â uma m√©trica usada para avaliar a precis√£o de um modelo de previs√£o em rela√ß√£o ao tamanho dos erros em termos percentuais. Essa m√©trica calcula a m√©dia dos valores absolutos dos erros percentuais entre os valores reais e os valores previstos.</p>
            </div>
            """,

        "MAE": """
        <div class="nested-container">
            <h6>MAE</h6>
            <p>O valor do MAE, como qualquer m√©trica de erro, depende muito do contexto e da escala dos dados que voc√™ est√° considerando. No contexto do mercado de a√ß√µes, um MAE de 12,06 pontos pode ser considerado alto ou baixo dependendo do valor m√©dio dos √≠ndices ou ativos que voc√™ est√° analisando.</p>
            <p>Se o √≠ndice ou ativo em quest√£o tem uma faixa de valores geralmente baixa (por exemplo, entre 100 e 200 pontos), um MAE de 12,06 pode ser considerado significativo, representando uma porcentagem consider√°vel dessa faixa.</p>
            <p>Por outro lado, se o √≠ndice ou ativo tem valores muito mais altos (por exemplo, entre 1000 e 2000 pontos), um MAE de 12,06 pode ser relativamente pequeno.</p>
            <p>O importante √© contextualizar esse valor em rela√ß√£o √† escala dos dados que est√° sendo analisada e considerar como ele se compara a outros modelos ou an√°lises similares. Em geral, um MAE mais baixo indica um melhor desempenho do modelo em prever os valores reais.</p>
        </div>
        """,
        "MAPE": """
        <div class="nested-container">
            <h6><strong>MAPE</strong></h6>
            <p>Para a bolsa de valores, 11,65% √© um valor razo√°vel?</p>
            <p>Para a bolsa de valores, um MAPE de 11,65% pode ser considerado relativamente alto em muitos contextos devido √† sensibilidade e √† volatilidade desse ambiente. No entanto, no mundo da previs√£o financeira e de a√ß√µes, avaliar se um MAPE de 11,65% √© considerado aceit√°vel ou n√£o depende de diversos fatores:</p>
            <ul>
                <li><strong>Horizonte de Tempo:</strong> O MAPE pode variar dependendo do horizonte de tempo das previs√µes. Em curtos per√≠odos de tempo, como previs√µes intra-di√°rias,
                </li>
                <li><strong>Instrumento Financeiro:</strong> Diferentes tipos de ativos (a√ß√µes, commodities, moedas) podem ter comportamentos diferentes. Algumas a√ß√µes podem ser mais vol√°teis e imprevis√≠veis do que outras.</li>
                <li><strong>Estrat√©gia de Negocia√ß√£o:</strong> O MAPE aceit√°vel pode variar de acordo com a estrat√©gia de negocia√ß√£o. Para um investidor de longo prazo, um MAPE mais alto pode ser toler√°vel, enquanto para traders de curto prazo, pode ser considerado menos aceit√°vel.</li>
                <li><strong>Compara√ß√£o com Refer√™ncias:</strong> √â √∫til comparar o MAPE obtido com o desempenho de outros modelos de previs√£o ou com benchmarks do mercado financeiro para avaliar sua efic√°cia relativa.</li>
                <li><strong>Consequ√™ncias Financeiras:</strong> Avalie as consequ√™ncias financeiras do MAPE. Mesmo que 11,65% pare√ßa alto, se as previs√µes permitirem tomar decis√µes lucrativas ou reduzir perdas, pode ser aceit√°vel.</
                </li>
            </ul>
            <p>Em geral, para muitos investidores e analistas da bolsa de valores, um MAPE de 11,65% poderia ser considerado relativamente alto, especialmente se a precis√£o das previs√µes for crucial para estrat√©gias de negocia√ß√£o espec√≠ficas. Contudo, √© crucial contextualizar o MAPE dentro das especificidades do mercado financeiro e considerar outros indicadores e m√©tricas ao avaliar a efic√°cia das previs√µes.</p>
        </div>
        """,
        "RMSE": """
        <div class="nested-container">
            <h6><strong>RMSE</strong></h6>
            <p>Em muitos casos envolvendo previs√£o na bolsa de valores, um RMSE de 11,65 pode ser considerado alto, especialmente se estiver lidando com a previs√£o de pre√ßos de a√ß√µes individuais ou ativos espec√≠ficos. No contexto financeiro, pequenas diferen√ßas nas previs√µes podem ter um impacto significativo nos resultados e nas decis√µes de investimento.</p>
            <p>Um RMSE de 11,65 indicaria que, em m√©dia, as previs√µes est√£o a cerca de 11,65 unidades de dist√¢ncia dos valores reais. Para muitos investidores e analistas financeiros, essa margem de erro pode ser considerada grande, especialmente ao lidar com investimentos de curto prazo ou estrat√©gias de trading onde a precis√£o √© crucial.</p>
            <p>Portanto, para previs√µes na bolsa de valores, √© comum buscar valores de erro menores, indicando uma maior precis√£o nas previs√µes. Um RMSE de 11,65 pode ser visto como relativamente alto, sugerindo a necessidade de melhorias no modelo para tornar as previs√µes mais precisas e confi√°veis.</p>
        </div>
        """,
        "Acur√°cia": """
        <div class="nested-container">
            <h6><strong>Acur√°cia</strong></h6>
            <p>
                Em modelos de s√©ries temporais, o conceito de "acur√°cia" n√£o √© t√£o direto quanto em modelos de classifica√ß√£o, onde se pode calcular a precis√£o de forma direta. A acur√°cia em modelos de s√©ries temporais pode ser interpretada de maneira diferente, pois envolve a capacidade do modelo de fazer previs√µes precisas sobre pontos futuros desconhecidos.
            </p>
            <p>
                Em vez de usar termos como "acur√°cia", normalmente s√£o utilizadas m√©tricas espec√≠ficas, como as mencionadas anteriormente (MAE, RMSE, MAPE, entre outras), para descrever o qu√£o pr√≥ximas as previs√µes do modelo est√£o dos valores reais.
            </p>
            <p>
                Ent√£o, dizer que um modelo de s√©rie temporal tem uma precis√£o de 70% pode n√£o ser a maneira mais comum de descrever seu desempenho. Em vez disso, seria mais informativo dizer algo como "o modelo tem um RMSE de 10", o que indica uma certa magnitude m√©dia de erro entre as previs√µes e os valores reais, ou "o modelo tem um MAPE de 5%", o que mostra a m√©dia dos erros percentuais das previs√µes.
            </p>
            <p>
                Traduzir a performance de um modelo de s√©ries temporais em uma √∫nica medida de "acur√°cia" pode n√£o capturar completamente sua efic√°cia, j√° que esses modelos s√£o geralmente avaliados por meio de v√°rias m√©tricas, cada uma fornecendo uma perspectiva diferente do desempenho do modelo.
            </p>
        </div>
        """
    }

    # Exibindo o conte√∫do da guia selecionada
    st.markdown(tab_contents[selected_tab], unsafe_allow_html=True)

    """
    ### Passo 3: Previs√£o no Intervalo 01/01/2024 a 31/01/2024  
    """

    flag = False
    data = st.slider('Data', 1, 31, 1)
    if data <= 9:
        data2 = '2024-01-0' + str(data)
    else:
        data2 = '2024-01-' + str(data)

    btn = st.button("Previs√£o")

    if btn:
        x = prevendo(df, data2, flag)
        if x is None:
            st.write(f"A data {data2} n√£o est√° dispon√≠vel nas previs√µes ou √© feriado/final de semana.")
        else:
            rounded_x = round(x, 3)
            st.write(f"Valor previsto para {data2}: {rounded_x}")
    flag = True
    prevendo(df, data)
